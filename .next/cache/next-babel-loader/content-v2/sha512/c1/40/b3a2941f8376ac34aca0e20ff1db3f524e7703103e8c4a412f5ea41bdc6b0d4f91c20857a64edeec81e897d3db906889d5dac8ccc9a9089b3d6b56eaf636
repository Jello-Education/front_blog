{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/andreloureiro/Documents/GitHub/front_blog/src/components/Login/senha.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { LoginSenha } from \"./styles\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nvar eye = /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n  icon: faEye\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 8,\n  columnNumber: 13\n}, this);\n\nvar Senha = /*#__PURE__*/function (_Component) {\n  _inherits(Senha, _Component);\n\n  var _super = _createSuper(Senha);\n\n  function Senha() {\n    var _this;\n\n    _classCallCheck(this, Senha);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      isPasswordShown: false\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"togglePasswordVisiblity\", function () {\n      var isPasswordShown = _this.state.isPasswordShown;\n\n      _this.setState({\n        isPasswordShown: !isPasswordShown\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"render\", function () {\n      var isPasswordShown = _this.state.isPasswordShown;\n      return /*#__PURE__*/_jsxDEV(\"form\", {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LoginSenha, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: \"input100\",\n                placeholder: \"Senha\",\n                type: isPasswordShown ? \"text\" : \"password\",\n                name: \"pass\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 15\n              }, _assertThisInitialized(_this)), /*#__PURE__*/_jsxDEV(\"i\", {\n                className: \"password-icon\",\n                onClick: _this.togglePasswordVisiblity,\n                children: eye\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 15\n              }, _assertThisInitialized(_this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 13\n            }, _assertThisInitialized(_this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 11\n          }, _assertThisInitialized(_this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }, _assertThisInitialized(_this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, _assertThisInitialized(_this));\n    });\n\n    return _this;\n  }\n\n  return Senha;\n}(Component);\n\nexport default Senha;","map":{"version":3,"sources":["/Users/andreloureiro/Documents/GitHub/front_blog/src/components/Login/senha.tsx"],"names":["React","Component","LoginSenha","faEye","FontAwesomeIcon","eye","Senha","isPasswordShown","state","setState","togglePasswordVisiblity"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAGA,SAASC,UAAT,QAA2B,UAA3B;AACA,SAASC,KAAT,QAAsB,mCAAtB;AACA,SAASC,eAAT,QAAgC,gCAAhC;;AAEA,IAAMC,GAAG,gBAAG,QAAC,eAAD;AAAiB,EAAA,IAAI,EAAEF;AAAvB;AAAA;AAAA;AAAA;AAAA,QAAZ;;IAEMG,K;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,eAAe,EAAE;AADX,K;;8EAIkB,YAAM;AAAA,UACtBA,eADsB,GACF,MAAKC,KADH,CACtBD,eADsB;;AAE9B,YAAKE,QAAL,CAAc;AAAEF,QAAAA,eAAe,EAAE,CAACA;AAApB,OAAd;AACD,K;;6DAEQ,YAAM;AAAA,UACLA,eADK,GACe,MAAKC,KADpB,CACLD,eADK;AAEb,0BACE;AAAA,+BACE;AAAA,iCACE,QAAC,UAAD;AAAA,mCACE;AAAA,sCACE;AACE,gBAAA,SAAS,EAAC,UADZ;AAEE,gBAAA,WAAW,EAAC,OAFd;AAGE,gBAAA,IAAI,EAAEA,eAAe,GAAG,MAAH,GAAY,UAHnC;AAIE,gBAAA,IAAI,EAAC;AAJP;AAAA;AAAA;AAAA;AAAA,+CADF,eAOE;AACE,gBAAA,SAAS,EAAC,eADZ;AAEE,gBAAA,OAAO,EAAE,MAAKG,uBAFhB;AAAA,0BAIGL;AAJH;AAAA;AAAA;AAAA;AAAA,+CAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uCADF;AAsBD,K;;;;;;EAlCiBJ,S;;AAqCpB,eAAeK,KAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { LoginSenha } from \"./styles\";\nimport { faEye } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nconst eye = <FontAwesomeIcon icon={faEye} />;\n\nclass Senha extends Component {\n  state = {\n    isPasswordShown: false,\n  };\n\n  togglePasswordVisiblity = () => {\n    const { isPasswordShown } = this.state;\n    this.setState({ isPasswordShown: !isPasswordShown });\n  };\n\n  render = () => {\n    const { isPasswordShown } = this.state;\n    return (\n      <form>\n        <div>\n          <LoginSenha>\n            <div>\n              <input\n                className=\"input100\"\n                placeholder=\"Senha\"\n                type={isPasswordShown ? \"text\" : \"password\"}\n                name=\"pass\"\n              />\n              <i\n                className=\"password-icon\"\n                onClick={this.togglePasswordVisiblity}\n              >\n                {eye}\n              </i>\n            </div>\n          </LoginSenha>\n        </div>\n      </form>\n    );\n  };\n}\n\nexport default Senha;\n"]},"metadata":{},"sourceType":"module"}